package com.nwq.code.liferecord.data_base.automatic;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.nwq.code.liferecord.data_base.bean.AnchorPoint;
import com.nwq.code.liferecord.data_base.bean.ImportantNode;
import com.nwq.code.liferecord.data_base.bean.TakeTimeRecord;

import com.nwq.code.liferecord.data_base.automatic.AnchorPointDao;
import com.nwq.code.liferecord.data_base.automatic.ImportantNodeDao;
import com.nwq.code.liferecord.data_base.automatic.TakeTimeRecordDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig anchorPointDaoConfig;
    private final DaoConfig importantNodeDaoConfig;
    private final DaoConfig takeTimeRecordDaoConfig;

    private final AnchorPointDao anchorPointDao;
    private final ImportantNodeDao importantNodeDao;
    private final TakeTimeRecordDao takeTimeRecordDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        anchorPointDaoConfig = daoConfigMap.get(AnchorPointDao.class).clone();
        anchorPointDaoConfig.initIdentityScope(type);

        importantNodeDaoConfig = daoConfigMap.get(ImportantNodeDao.class).clone();
        importantNodeDaoConfig.initIdentityScope(type);

        takeTimeRecordDaoConfig = daoConfigMap.get(TakeTimeRecordDao.class).clone();
        takeTimeRecordDaoConfig.initIdentityScope(type);

        anchorPointDao = new AnchorPointDao(anchorPointDaoConfig, this);
        importantNodeDao = new ImportantNodeDao(importantNodeDaoConfig, this);
        takeTimeRecordDao = new TakeTimeRecordDao(takeTimeRecordDaoConfig, this);

        registerDao(AnchorPoint.class, anchorPointDao);
        registerDao(ImportantNode.class, importantNodeDao);
        registerDao(TakeTimeRecord.class, takeTimeRecordDao);
    }
    
    public void clear() {
        anchorPointDaoConfig.clearIdentityScope();
        importantNodeDaoConfig.clearIdentityScope();
        takeTimeRecordDaoConfig.clearIdentityScope();
    }

    public AnchorPointDao getAnchorPointDao() {
        return anchorPointDao;
    }

    public ImportantNodeDao getImportantNodeDao() {
        return importantNodeDao;
    }

    public TakeTimeRecordDao getTakeTimeRecordDao() {
        return takeTimeRecordDao;
    }

}
